#! /bin/bash

# Author: Kenneth Armstrong
# Basic script to run Junit tests, and some integration tests
# Not perfect by any means. Use at your own risks
# Does not do error checking, so don't mess up


CLASSPATH=src:libs/libs/junit-4.11.jar:libs/libs/hamcrest-core-1.3.jar:bin/classes:tests

# Essentially and alias to 'ant debug'
if [ "$1" == "build" ]; then
    echo
    echo Building Android classes.... This may take a few seconds
    ant debug 1>/dev/null
    echo
    echo
    echo Finished building android classes
    echo ---------------------------------
    echo 
    exit
fi

# Check to see whether or not they have compiled classes already
# Not perfect, but works well enough

if [ ! -d bin/classes ]; then
    echo
    echo Building Android classes.... This may take a few seconds
    ant debug 1>/dev/null
    echo
    echo "Finished Building APK...."
    echo --------------------------
    echo

else 
    echo
    echo Running with currently compiled classes...
    echo "(Run 'ant debug' or './test build' to rebuild)"
    echo -----------------------------------------
    echo 
fi


# Run (semi) integration tests if no arguement is specified
# The integration tests will be defined in TestMaster
if [ "$#" = 0 ]; then
    echo Running integration tests...
    javac -cp $CLASSPATH tests/*.java
    java -cp $CLASSPATH TestMaster
    exit
fi


# Run unit tests on single entity
if [ "$1" == "run" -a "$#" == 2 ]; then
    echo Running unit tests on $2...
    javac -cp $CLASSPATH tests/$2Test.java
    java -cp $CLASSPATH org.junit.runner.JUnitCore $2Test
    exit
fi


# Clean up all the built classes
if [ "$1" == "clean" ]; then
    echo Cleaning up...
    rm -f tests/*.class
    rm -f src/ca/ualberta/cs/oneclick_cookbook/*.class
    exit
fi

# Run all unit tests
if [ "$1" == "all" ]; then
    echo Running all unit tests on all classes...
    javac -cp $CLASSPATH tests/*.java
    java -cp $CLASSPATH org.junit.runner.JUnitCore AllTests
    exit
fi
